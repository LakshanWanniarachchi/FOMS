# name: Build and Run Services

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build-and-run:
#     runs-on: ubuntu-latest  # Corrected typo
#     strategy:
#       matrix:
#         service: [foms, nginx]  # List of services to build
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Login to Docker registry
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}  # Use GitHub Secrets
#           password: ${{ secrets.DOCKER_PASSWORD }}  # Use GitHub Secrets

#       - name: Build and push foms
#         if: ${{ matrix.service == 'foms' }}
#         run: |
#           docker build -t lakshanwanniarachchi/foms2:latest .
#           docker push lakshanwanniarachchi/foms2:latest

#       # - name: Run service:foms
#       #   if: ${{ matrix.service == 'foms' }}
#       #   uses: addnab/docker-run-action@v3
#       #   with:
#       #     image: lakshanwanniarachchi/foms2:latest
#       #     options: -d -p 5000:5000 -v /path/to/static:/website/templates

#       - name: Build and push nginx
#         if: ${{ matrix.service == 'nginx' }}
#         run: |
#           docker build -t lakshanwanniarachchi/nginx2:latest nginx
#           docker push lakshanwanniarachchi/nginx2:latest

#       # - name: Run service:nginx
#       #   if: ${{ matrix.service == 'nginx' }}
#       #   uses: addnab/docker-run-action@v3
#       #   with:
#       #     image: lakshanwanniarachchi/nginx2:latest
#       #     options: -d -p 80:80 -v /path/to/static:/website/templates





name: CI/CD Pipeline for Services

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted  # Use your self-hosted GitHub Runner

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

       # Step 3: Build Docker Images
      - name: Build Docker Images
        run: |
          docker-compose -f docker-compose.yml build --progress=plain

      # Step 4: List Docker Images (Debugging)
      - name: List Docker Images
        run: docker images

        # Step 5: Tag and Push Docker Images to Docker Hub
      - name: Tag and Push Docker Images
        run: |
          docker tag foms:latest lakshanwanniarachchi/foms:latest
          docker tag nginx:latest lakshanwanniarachchi/nginx:latest
          docker push lakshanwanniarachchi/foms:latest
          docker push lakshanwanniarachchi/nginx:latest

      # Step 6: Pull latest Docker images and restart containers
      - name: Pull latest Docker images and restart containers
        run: |
          docker pull lakshanwanniarachchi/foms3:latest
          docker pull lakshanwanniarachchi/nginx3:latest

          # Stop and remove existing containers (if any)
          docker-compose -f docker-compose.yml down

          # Restart the containers with the latest images
          docker-compose -f docker-compose.yml up -d

